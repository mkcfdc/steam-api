
# HTTP server block to redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name gladwater.gg www.gladwater.gg;

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server block
server {
    listen 443 ssl http2; # Enable HTTP/2
    listen [::]:443 ssl http2 ipv6only=on; # Enable HTTP/2 for IPv6

    root /root/steam-api/frontend/dist;
    index index.html;
    server_name gladwater.gg www.gladwater.gg;

    add_header Content-Security-Policy "default-src 'self' https://media.steampowered.com https://avatars.steamstatic.com https://cdn.cdkeys.com; script-src 'self'; object-src 'none';" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Permissions-Policy "geolocation=(self), microphone=()" always;


location / {
    # First attempt to serve request as file, then as directory, then fall back to index.html
    try_files $uri $uri/ /index.html;
}

    location /api/ {
        rewrite ^/api(/.*)$ $1 break;  # removes the /api prefix before forwarding
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # SSL configuration
    ssl_certificate /etc/ssl/gladwater.gg.pem;
    ssl_certificate_key /etc/ssl/gladwater.gg.key;

    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
    ssl_dhparam /etc/ssl/dhparam;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA->
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}